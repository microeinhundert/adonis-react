{
  "E_NOT_HYDRATABLE": {
    "message": "The component inside HydrationRoot \"{{ hydrationRootId }}\" is not hydratable. Make sure the component was wrapped with the `hydratable` function",
    "code": "E_NOT_HYDRATABLE",
    "status": 500
  },
  "E_CANNOT_HYDRATE_WITH_CHILDREN": {
    "message": "The component \"{{ componentIdentifier }}\" inside HydrationRoot \"{{ hydrationRootId }}\" has children. This is not supported",
    "code": "E_CANNOT_HYDRATE_WITH_CHILDREN",
    "status": 500
  },
  "E_MISSING_HYDRATION_DATA": {
    "message": "Found HydrationRoot \"{{ hydrationRootId }}\" which is missing hydration data. Make sure you passed all the required props to all of your HydrationRoots. If everything looks fine to you, this is most likely a bug of Radonis",
    "code": "E_MISSING_HYDRATION_DATA",
    "status": 500
  },
  "E_CANNOT_HYDRATE": {
    "message": "Found the server-rendered component \"{{ componentIdentifier }}\" inside of HydrationRoot \"{{ hydrationRootId }}\", but that component could not be hydrated. Make sure the component exists in the client bundle",
    "code": "E_CANNOT_HYDRATE",
    "status": 500
  },
  "E_COMPONENT_ALREADY_REGISTERED": {
    "message": "The component \"{{ componentIdentifier }}\" was already registered for hydration. Make sure to not use the same name for multiple components, regardless of which directory they are in",
    "code": "E_COMPONENT_ALREADY_REGISTERED",
    "status": 500
  },
  "E_MISSING_MANIFEST": {
    "message": "Cannot get the Radonis manifest. Make sure the server provider was configured properly",
    "code": "E_MISSING_MANIFEST",
    "status": 500
  }
}
